@page
@using ATLManager.Services;
@using Microsoft.AspNetCore.Identity
@using ATLManager.Areas.Identity.Data

@inject SignInManager<ATLManagerUser> SignInManager
@inject UserManager<ATLManagerUser> UserManager
@model LoginModel

@{
    ViewData["Title"] = @language.GetKey("login");
    Layout = "~/Areas/Identity/Pages/_AuthLayout.cshtml";
}
@inject LanguageService language

@if (!SignInManager.IsSignedIn(User))
{
    <!-- Container -->
    <div class="container h-auto mt-auto">

        <!-- Botão de Ajuda -->
        <div class="row" style="padding-left: 6em;">
            <div class="col-3"></div>
            <div class="col-5"></div>
            <div class="col-4 text-right pb-2">
                <button class="btn btn-primary rounded-circle" id="question-button" data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                    <img src="~/images/question.png" alt="Imagem 1" class="img-fluid" width="15">
                </button>
            </div>
        </div>
        <!-- // Botão de Ajuda -->


        <div class="d-flex justify-content-center">
            <!-- Box  -->
            <div class="row col-6 justify-content-center custom-box">
                <div class="row box border-5">
                    <form id="account" method="post">


                        <div class="mb-3">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <label asp-for="Input.Email" class="form-label" autocomplete="username" aria-required="true">@language.GetKey("email")</label>
                            <input asp-for="Input.Email" class="form-control" id="email">
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Input.Password" class="form-label" autocomplete="current-password" aria-required="true">@language.GetKey("password")</label>
                            <input asp-for="Input.Password" class="form-control" id="password">
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                            <div class="checkbox"> <!-- sem classe -->
                                <label asp-for="Input.RememberMe" class="form-label">
                                    <input class="form-check-input" asp-for="Input.RememberMe" />
                                    @* @Html.DisplayNameFor(m => m.Input.RememberMe) *@
                                    @language.GetKey("rememberMe")
                                </label>
                            </div>

                            <div class="d-flex justify-content-between mt-2">
                                <a id="forgot-password" asp-page="./ForgotPassword" class="custom-link">@language.GetKey("forgetPassword")</a>
                                <a asp-page="./RegisterType" asp-route-returnUrl="@Model.ReturnUrl" class="custom-link">@language.GetKey("createAccount")</a>
                            </div>
                        </div>

                        <div class="text-center">
                            <button id="login-submit" type="submit" class="btn btn-primary btn-block mx-auto custom-button"
                            style="width: 20%;">
                                @language.GetKey("login")
                            </button>
                        </div>
                        <div class="text-center mt-3 p-1">
                            <a id="resend-confirmation" asp-page="./ResendEmailConfirmation" class="custom-link">@language.GetKey("reSentEmailConfirmation")</a>
                        </div>
                    </form>
                    <div class="text-center mt-3 fw-bolder p-1">@language.GetKey("doLoginBy")</div>

                    <div class="d-flex mt-3 justify-content-center">
                        @{
                            if ((Model.ExternalLogins?.Count ?? 0) == 0)
                            {
                                <div>
                                    <p>
                                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                            article
                                            about setting up this ASP.NET application to support logging in via external services
                                        </a>.
                                    </p>
                                </div>
                            }
                            else
                            {
                                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">

                                    @foreach (var provider in Model.ExternalLogins)
                                    {

                                        @if (provider.Name.Equals("Facebook"))
                                        {

                                            <button type="submit" class="text-center border-0" style="background-color:white" name="provider" value="@provider.Name" title="@language.GetKey("txtHoverLoginFacebook")">
                                                <img src="~/images/social/facebook.png" class="ms-3" width="30" height="30">
                                            </button>

                                        }

                                        @if (provider.Name.Equals("Microsoft"))
                                        {
                                            <button type="submit" class="text-center border-0" style="background-color:white" name="provider" value="@provider.Name" title="@language.GetKey("txtHoverLoginMicrosoft")">
                                                <img src="~/images/social/outlook.png" class="ms-3" width="30" height="30">
                                            </button>

                                        }

                                        @if (provider.Name.Equals("Twitter"))
                                        {
                                            <button type="submit" class="text-center border-0" style="background-color:white" name="provider" value="@provider.Name" title="@language.GetKey("txtHoverLoginTwitter")">
                                                <img src="~/images/social/twitter.png" class="ms-3" width="30" height="30">
                                            </button>

                                        }

                                        @if (provider.Name.Equals("Google"))
                                        {
                                            <button type="submit" class="text-center border-0" style="background-color:white" name="provider" value="@provider.Name" title="@language.GetKey("txtHoverLoginGoogle")">
                                                <img src="~/images/social/google.png" class="ms-3" width="30" height="30">
                                            </button>

                                        }

                                    }
                                </form>
                            }
                        }
                    </div>
                </div>
            </div>
            <!-- // Box -->
        </div>
    </div>
    <!-- // Container -->
	<!-- Slide Left (Help) -->
	<div class="offcanvas offcanvas-end position-fixed box myButton bg-primary h-auto" style="top:auto" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasRight"
		 aria-labelledby="offcanvasRightLabel">

    <!-- Slide Left (Help) -->
    <div class="offcanvas offcanvas-end h-100" data-bs-backdrop="false" style="margin-top: 10%; border-radius: 15px"
    tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel h">
        <div class="offcanvas-header">
            <h5 id="offcanvasRightLabel">@language.GetKey("help") </h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <!-- canvas body  -->
            <!-- // canvas body  -->
        </div>
    </div>
    <!-- // Slide Left (Help) -->
		<div class="offcanvas-header helpCustomMargin">
			<div class="col col-11 text-center">
				<h5 class="offcanvas-title fw-bold justify-content-center" id="offcanvasRightLabel"
					style="color:white;">
					Ajuda
				</h5>
			</div>
			<div class="col" text-right>
				<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
						aria-label="Close"></button>
			</div>
		</div>
		<input class="form-control mr-sm-2 mb-3 p-3 text-center" type="search" placeholder="Procure artigos que o ajude"
			   aria-label="Search" style="border-radius: 10px;">

		<div class="helpCustomMargin h-100" style="background-color: #F8F8F8; margin-bottom: -1.25em; ">
			<div class="offcanvas-body box overflow-auto">

				<div class=" row p-3 " style=" background-color: #F8F8F8">
					<button type="button" class=" helpShadowButton custom-button helpButton border-0 mt-3 fw-bold"
							id="showText1">
						<span>@language.GetKey("howToLoginOnApp")</span>
						<img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
					</button>

					<br><br><br><br>
					<span class="myText p-3 helpShadowButton" id="displayText1"
						  style="display: none; position: relative;">
						@language.GetKey("txtHowToLoginOnApp");
					</span>
				</div>

				<div class=" row p-3 " style=" background-color: #F8F8F8">
					<button type="button" class=" helpShadowButton custom-button helpButton border-0 mt-3 fw-bold"
							id="showText2">
						<span>@language.GetKey("howToLoginViaFacebook")</span>
						<img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
					</button>

					<br><br><br><br>
					<span class="myText p-3 helpShadowButton" id="displayText2"
						  style="display: none; position: relative;">
						@language.GetKey("txtHowToLoginViaFacebook");
					</span>
				</div>

				<div class=" row p-3 " style=" background-color: #F8F8F8">
					<button type="button" class=" helpShadowButton custom-button helpButton border-0 mt-3 fw-bold"
							id="showText3">
						<span>@language.GetKey("howToLoginViaGoogle")</span>
						<img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
					</button>

					<br><br><br><br>
					<span class="myText p-3 helpShadowButton" id="displayText3"
						  style="display: none; position: relative;">
						@language.GetKey("txtHowToLoginViaGoogle");
					</span>
				</div>

				<div class=" row p-3 " style=" background-color: #F8F8F8">
					<button type="button" class=" helpShadowButton custom-button helpButton border-0 mt-3 fw-bold"
							id="showText4">
						<span>@language.GetKey("howToLoginViaOutlook")</span>
						<img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
					</button>

					<br><br><br><br>
					<span class="myText p-3 helpShadowButton" id="displayText4"
						  style="display: none; position: relative;">
						@language.GetKey("txtHowToLoginViaOutlook")
					</span>
				</div>

				<div class=" row p-3 " style=" background-color: #F8F8F8">
					<button type="button" class=" helpShadowButton custom-button helpButton border-0 mt-3 fw-bold"
							id="showText5">
						<span>@language.GetKey("howToLoginViaTwitter")</span>
						<img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
					</button>

					<br><br><br><br>
					<span class="myText p-3 helpShadowButton" id="displayText5"
						  style="display: none; position: relative;">
						@language.GetKey("txtHowToLoginViaTwitter")
					</span>
				</div>


			</div>
		</div>
	</div>

	<script type="text/javascript">
		// Add the following code if you want the name of the file appear on select
		$(".custom-file-input").on("change", function () {
			var fileName = $(this).val().split("\\").pop();
			$(this).siblings(".custom-file-label").addClass("selected").html(fileName);
		});
	</script>

	<!-- // Slide Left (Help) -->
	<!-- JS Button help 1 -->
	<script>
		document.getElementById('showText1').addEventListener('click', function () {
			var displayText = document.getElementById('displayText1');
			var showTextBtn = document.getElementById('showText1');

			if (displayText.style.display === 'none') {
				displayText.style.display = 'block';
				showTextBtn.classList.remove('custom-button');
				showTextBtn.classList.add('myButton');

				// myButton
			} else {
				displayText.style.display = 'none';
				showTextBtn.classList.remove('myButton');
				showTextBtn.classList.add('custom-button');
			}
		});
	</script>
	<!-- JS Button help 1 -->
	<!-- JS Button help 2 -->
	<script>
		document.getElementById('showText2').addEventListener('click', function () {
			var displayText = document.getElementById('displayText2');
			var showTextBtn = document.getElementById('showText2');

			if (displayText.style.display === 'none') {
				displayText.style.display = 'block';
				showTextBtn.classList.remove('custom-button');
				showTextBtn.classList.add('myButton');

				// myButton
			} else {
				displayText.style.display = 'none';
				showTextBtn.classList.remove('myButton');
				showTextBtn.classList.add('custom-button');
			}
		});
	</script>
	<!-- JS Button help 2 -->
	<!-- JS Button help 3 -->
	<script>
		document.getElementById('showText3').addEventListener('click', function () {
			var displayText = document.getElementById('displayText3');
			var showTextBtn = document.getElementById('showText3');

			if (displayText.style.display === 'none') {
				displayText.style.display = 'block';
				showTextBtn.classList.remove('custom-button');
				showTextBtn.classList.add('myButton');

				// myButton
			} else {
				displayText.style.display = 'none';
				showTextBtn.classList.remove('myButton');
				showTextBtn.classList.add('custom-button');
			}
		});
	</script>
	<!-- JS Button help 3 -->
	<!-- JS Button help 4 -->
	<script>
		document.getElementById('showText4').addEventListener('click', function () {
			var displayText = document.getElementById('displayText4');
			var showTextBtn = document.getElementById('showText4');

			if (displayText.style.display === 'none') {
				displayText.style.display = 'block';
				showTextBtn.classList.remove('custom-button');
				showTextBtn.classList.add('myButton');

				// myButton
			} else {
				displayText.style.display = 'none';
				showTextBtn.classList.remove('myButton');
				showTextBtn.classList.add('custom-button');
			}
		});
	</script>
	<!-- JS Button help 4 -->
	<!-- JS Button help 5 -->
	<script>
		document.getElementById('showText5').addEventListener('click', function () {
			var displayText = document.getElementById('displayText5');
			var showTextBtn = document.getElementById('showText5');

			if (displayText.style.display === 'none') {
				displayText.style.display = 'block';
				showTextBtn.classList.remove('custom-button');
				showTextBtn.classList.add('myButton');

				// myButton
			} else {
				displayText.style.display = 'none';
				showTextBtn.classList.remove('myButton');
				showTextBtn.classList.add('custom-button');
			}
		});
	</script>
	<!-- JS Button help 5 -->
          

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
}