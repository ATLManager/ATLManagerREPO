@model IEnumerable<ATLManager.Models.Atividade>

@{
    ViewData["Title"] = "Index";
}

@functions {
    // Function to generate a unique color based on a Guid ID
    string GenerateColor(Guid id)
    {
        // Convert the Guid to a byte array
        var bytes = id.ToByteArray();

        // Calculate the red (r), green (g), and blue (b) components based on the bytes of the Guid
        // We sum two adjacent bytes and take the modulo 256 to ensure the result is in the range of 0 to 255
        int r = (bytes[0] + bytes[1]) % 256;
        int g = (bytes[2] + bytes[3]) % 256;
        int b = (bytes[4] + bytes[5]) % 256;

        // Return the color in hexadecimal format
        // We use string interpolation syntax to create a string in the #RRGGBB format
        return $"#{r:X2}{g:X2}{b:X2}";
    }
}
@section Scripts {
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.5/index.global.min.js'></script>
    <script>

        function applyModalStyles() {
            var css = `
                        .modal-backdrop {
                            z-index: 1040 !important;
                        }

                        .modal-header .modal-title {
                            text-align: center;
                        }
                        
                        .modal-content {
                            margin: 5px;
                        }

                        .close {
                            color: #aaa;
                            font-size: 28px;
                            font-weight: bold;
                        }

                        .close:hover,
                        .close:focus {
                            color: black;
                            text-decoration: none;
                            cursor: pointer;
                        }

                        body {
                            height: auto !important;
                        }

                        .fc-theme-standard th {
                            background-color: #007BFF;
                            color: white;
                            border: none;
                        }

                        .table thead th {
                            background-color: #007BFF;
                            color: white;
                            border: none;
                        }

                        .modal-buttons {
                            display: flex;
                            justify-content: space-around;
                            margin-top: 1em;
                        }

                        .calendar {
                            width: 90%;
                            margin: 0 auto;
                        }

                        `;

            var style = document.createElement('style');
            style.type = 'text/css';
            style.appendChild(document.createTextNode(css));
            document.head.appendChild(style);
        }


        function getEventById(id, events) {
            return events.find(function (event) {
                return event.id === id;
            });
        }


        $(document).ready(function () {

            applyModalStyles();
            var calendarEl = document.getElementById('calendar');

            // Criar a matriz de eventos
            var events = [
        @foreach (var item in Model)
        {
            <text>
                    {
                        id: "@item.AtividadeId",
                        title: @Html.Raw(Json.Serialize(item.Name)),
                        start: "@item.StartDate.ToString("yyyy-MM-dd")",
                        end: "@(item.StartDate == item.EndDate ? item.StartDate.ToString("yyyy-MM-dd") : item.EndDate.ToString("yyyy-MM-dd"))",
                        description: @Html.Raw(Json.Serialize(item.Descripton)),
                        color: "@GenerateColor(item.AtividadeId)",
                        className: "event-with-shadow"
                    },
            </text>
        }
        ];

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                themeSystem: 'bootstrap5',
                height: '700px',
                events: events,

                eventClick: function (info) {
                    var clickedEvent = getEventById(info.event.id, calendar.getEvents());

                    // Exibir a janela modal com os detalhes do evento
                    showModal(clickedEvent.title, clickedEvent.start, clickedEvent.end, clickedEvent.extendedProps.description, clickedEvent.id);
                },

                 eventDidMount: function (info) {
                    // Adicionar sombra à borda do evento
                    var eventEl = info.el;
                    $(eventEl).css('box-shadow', '2px 2px 6px rgba(0, 0, 0, 0.5)');
                },
            });

            calendar.render();

            $('#myModal').on('click', '.close', function () {
                $('#myModal').modal('hide');
            });
        });





        function showModal(title, start, end, description, id) {
            // Seleciona o elemento modal
            var modal = $('#myModal');

            // Verifica se start e end não são nulos antes de chamar toLocaleDateString
            var startString = start ? start.toLocaleDateString() : '';
            var endString = end ? end.toLocaleDateString() : '';

            // Verifica se a data final é nula e, se for, define a data final como a mesma data de início
            if (!end) end = start;
            var endString = end.toLocaleDateString();

            // Preenche os elementos da modal com as informações do evento clicado
            modal.find('.modal-title').text(title);
            modal.find('.modal-body').html('<p><strong>Data inicial:</strong> ' + startString + '</p>' +
                '<p><strong>Data final:</strong> ' + endString + '</p>' +
                '<p><strong>Descrição:</strong> ' + description + '</p>' +
                '<div class="modal-buttons">' +
                '<a href="' + '@Url.Action("Edit", "Atividades")' + '/' + id + '"><button class="btn btn-primary custom-button" style="border-radius:6em"> <img src="/images/icons/edit-icon1.png" height="20" width="20"> </button></a>' +
                '<a href="' + '@Url.Action("Details", "Atividades")' + '/' + id + '"><button class="btn btn-info custom-button" style="border-radius:6em"> <img src="/images/icons/search-icon1.png" height="20" width="20"> </button></a>' +
                '<a href="' + '@Url.Action("Delete", "Atividades")' + '/' + id + '"><button class="btn btn-danger custom-button" style="border-radius:6em;"> <img src="/images/icons/delete-icon1.png" height="20" width="20"></button></a>' +
                '</div>');

            // Exibe a modal
            modal.modal('show');
        }


    </script>
}




<h1>Lista de Atividades</h1>

<div class="row">
    <div class="col">
        <p class="text-end">
            <a asp-action="Create"><button type="button" class="btn btn-primary custom-button style=" border-radius:6em""> + Adicionar Atividades </button></a>
        </p>
    </div>
</div>
<style>
    .fc-event {
        cursor: pointer;
    }
</style>

<div id="calendar" class="mb-4"></div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title text-center" style="text-align: center;"></h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Data inicial:</strong> <span id="start"></span></p>
                            <p><strong>Data final:</strong> <span id="end"></span></p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Descrição:</strong></p>
                            <p id="description"></p>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
