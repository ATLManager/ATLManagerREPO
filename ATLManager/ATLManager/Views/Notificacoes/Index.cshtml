@model IEnumerable<ATLManager.Models.Notificacao>
@using Microsoft.AspNetCore.Identity
@using ATLManager.Areas.Identity.Data

@inject SignInManager<ATLManagerUser> SignInManager
@inject UserManager<ATLManagerUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@if (SignInManager.IsSignedIn(User))
{
    <link rel='stylesheet' type='text/css' media='screen' href='~/css/custom-box-12.css'>

    <!-- 1.13.4 -->
    <link rel="stylesheet" href="~/css/dataTables/bootstrap5.min.css">
    <script src="~/js/datatable/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
        });
    </script>

    <!-- Container -->
    <div class="container-fluid">
        <div class="d-flex justify-content-center ms-2 pb-2" style="padding-left: 2%; padding-top: 0%;">
            <h1 class="me-3 fw-bold text-center mb-0">Notificações</h1>
            <img src="~/images/icons/search-group.png" width="50" height="50">
        </div>

        <div class="row" style="padding-left: 6em;">
            <div class="col text-right pb-2" id="divQuestion">
                <button class="btn btn-primary rounded-circle" id="btn-ajuda">
                    <img src="~/images/question.png" alt="Imagem 1" class="img-fluid" width="15">
                </button>
            </div>
        </div>

        <!-- Fase 1  -->
        <!-- d-flex -->
        <div class="d-flex justify-content-center" id="divFase1">
            <!-- Box  -->
            <div class="row justify-content-center custom-box" id="myBox">
                <div class="row box border-5 p-5">
                    <div class="container">
                            <div class="row"></div>

                            <div class="row mt-3">
                                <div class="mb-3">

                                    <div class="row">
                                        <div class="col-2">
                                            <form asp-action="MarkAllAsRead" method="post">
                                                <input type="submit" value="Mark All as Read" class="btn btn-primary me-2" />
                                                @Html.AntiForgeryToken()
                                            </form>
                                        </div>

                                        <div class="col-3">
                                            <form asp-action="DeleteAll" method="post">
                                                <input type="submit" value="Delete All Notifications" class="btn btn-danger" />
                                                @Html.AntiForgeryToken()
                                            </form>
                                        </div>

                                        <div class="col">
                                                <div class="col text-end">
                                                    <a asp-action="Create" class="btn btn-primary custom-button ms-2"> + Adicionar Recado
                                                    </a>
                                                </div>
                                         
                                        </div>
                                    </div>


                                    <p class="rounded-circle"></p>

                                    
                                    <table class="table table-hover table-bordered text-center" style="background:#d3e3f2;cursor: pointer;" id="myTable">
                                        <thead>
                                            <tr>
                                                <th class="text-center pr-2">
                                                    @Html.DisplayNameFor(model => model.Titulo)
                                                </th>
                                                 <th class="text-center pr-2">
                                                    @Html.DisplayNameFor(model => model.Mensagem)
                                                </th>
                                                 <th class="text-center pr-2">
                                                    @Html.DisplayNameFor(model => model.Lida)
                                                </th>
                                                   <th class="text-center pr-2">
                                                    Data
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var item in Model.OrderByDescending(m => m.DataNotificacao))
                                        {
                                            <tr style="@(item.Lida ? null : "font-weight: bold;")" data-id="@item.NotificacaoId" data-title="@item.Titulo" data-content="@item.Mensagem">
                                                <td class="align-middle">
                                                    @Html.DisplayFor(modelItem => item.Titulo)
                                                </td>
                                                <td class="align-middle">
                                                    @Html.Raw(item.Mensagem)
                                                </td>
                                                <td class="align-middle" data-lida="@item.Lida">
                                                    <span>@(item.Lida ? "☑️" : "☐")</span>
                                                </td>
                                                <td class="align-middle">
                                                    @Html.DisplayFor(modelItem => item.DataNotificacao)
                                                </td>
                                            </tr>
                                        }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title text-center" id="notificationModalLabel" style="text-align: center;"></h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-12">
                                <p id="notificationContent"></p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <hr class="hr-separator"> <!-- Adiciona uma linha horizontal para separar o conteúdo e os botões -->
                                <div class="modal-buttons">
                                    <form action="/Notificacoes/Delete" method="post">
                                        <input type="hidden" name="NotificacaoId" id="NotificacaoId" value="" />
                                        <button type="submit" class="btn btn-danger custom-button" style="border-radius:6em;" data-dismiss="modal" id="deleteNotificationButton">
                                            <img src="~/images/icons/delete-icon1.png" height="20" width="20">
                                        </button>
                                        @Html.AntiForgeryToken()
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Slide de Ajuda  -->
    <div id="menu-ajuda" class="bg-primary animate__animated animate__slideInLeft">

        <div class="row text-center mt-2">
            <div class="col-10 ">
                <h2 class="text-white ms-5">Ajuda</h2>
            </div>

            <div class="col-2">
                <button type="button" class="btn-close text-reset" id="close-ajuda" aria-label="Close"></button>
            </div>
        </div>
        <div class="">
            <input class="form-control mr-sm-2 mb-3 p-2 text-center" type="search"
                   placeholder="Procure artigos que o ajude" aria-label="Search" style="border-radius: 10px;">
        </div>
        <!-- -->
        <ul class="row justify-content-center p-4 bg-white mt-4 "
            style="position: absolute;   right: 0em; left: 0em; height: 80%;">
            <li class="row">
                <button type="button" class="btn btn-help helpShadowButton border-0 mt-3 fw-bold" id="showText1">
                    <div class="d-flex align-items-center justify-content-center">

                        <span>Como alterar uma visita de estudo</span>
                        <img src="~/images/guide/dropdown.png" style="padding-left: 2%;">
                    </div>
                </button>


                <span class="myText p-3 helpShadowButton" id="displayText1" style="display: none; position: relative;">
                    Here's some more textHere's some more textHere's some more textHere's some
                    more textHe

                </span>
            </li>


            <li class="row">
                <button type="button" class="btn helpShadowButton border-0 mt-3 fw-bold" id="Artigos">
                    <div class="d-flex align-items-center justify-content-center">
                        <div class="col-3">
                            <img src="~/images/guide/terms.png" class="">
                        </div>
                        <div class="col">
                            <span>Leia artigos de ajuda</span>
                        </div>
                    </div>
                </button>
            </li>
            <li class="row">
                <button type="button" class="btn helpShadowButton border-0 mt-3 fw-bold" id="Artigos">
                    <div class="d-flex align-items-center">
                        <div class="col-3">
                            <img src="~/images/guide/comunity.png" class="">
                        </div>
                        <div class="col">
                            <span>Pergunte à comunidade</span>
                        </div>
                    </div>
                </button>
            </li>
            <li class="row">
                <button type="button" class="btn helpShadowButton border-0 mt-3 fw-bold" id="Artigos">
                    <div class="d-flex align-items-center justify-content-center">
                        <div class="col-3">
                            <img src="~/images/guide/new.png" class="">
                        </div>
                        <div class="col">
                            <span>Novas Atualizações</span>
                        </div>
                    </div>
                </button>
            </li>
            <li class="row">
                <button type="button" class="btn helpShadowButton border-0 mt-3 fw-bold" id="Artigos">
                    <div class="d-flex align-items-center justify-content-center">
                        <div class="col-3">
                            <img src="~/images/guide/feedback.png" class="">
                        </div>
                        <div class="col">
                            <span>Dê Feedback</span>
                        </div>
                    </div>

                </button>
            </li>
        </ul>
    </div>
    <!-- // Slide de Ajuda  -->
    <!-- Search on table (Fase1) -->
    <script>
        // Get the input element and add an event listener for input
        const input = document.getElementById("nome");
        input.addEventListener("input", function () {

            // Get the table and search for the input value
            const table = document.getElementById("myTable");
            const filter = input.value.toUpperCase();
            const rows = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those that don't match the search query
            for (let i = 0; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName("td");
                let match = false;
                for (let j = 0; j < cells.length; j++) {
                    const cell = cells[j];
                    if (cell) {
                        const text = cell.textContent || cell.innerText;
                        if (text.toUpperCase().indexOf(filter) > -1) {
                            match = true;
                            break;
                        }
                    }
                }
                rows[i].style.display = match ? "" : "none";
            }
        });
    </script>

    <script>

        // Adiciona as classes de estilo ao modal
        function applyModalStyles() {
            var css = `
                .modal-backdrop {
                    z-index: 1040 !important;
                }

              * {
                   font-family: 'Poppins', sans-serif;
                }

                .modal-header .modal-title {
                    text-align: center;
                }

                .modal-header {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }

                .hr-separator {
                    border-top: 1px solid #dee2e6;
                    margin: 1em 0;
                }

                .modal-content {
                    margin: 5px;
                }

                .close {
                    color: #aaa;
                    font-size: 28px;
                    font-weight: bold;
                }

                .close:hover,
                .close:focus {
                    color: black;
                    text-decoration: none;
                    cursor: pointer;
                }

                body {
                    height: auto !important;
                }

                .fc-theme-standard th {
                    background-color: #007BFF;
                    color: white;
                    border: none;
                }

                .table thead th {
                    background-color: #007BFF;
                    color: white;
                    border: none;
                }

                .modal-buttons {
                    display: flex;
                    justify-content: center;
                    gap: 100px;
                    margin-top: 1em;
                }
            `;

            var style = document.createElement('style');
            style.type = 'text/css';
            style.appendChild(document.createTextNode(css));
            document.head.appendChild(style);
        }

        
        function showNotificationModal(title, content, notificacaoId) {
            var notificationModal = $('#notificationModal');
            notificationModal.find('.modal-title').text(title);
            notificationModal.find('#notificationContent').html(content);
            notificationModal.find('#NotificacaoId').val(notificacaoId);
            notificationModal.modal('show');
        }

        function DeleteNotification() {
            var notificationId = $('#deleteNotificationButton').attr('data-id');

            $.ajax({
                url: '/Notificacoes/Delete/' + notificationId,
                type: 'POST',
                dataType: 'json',
                data: { id: notificationId },
                success: function (response) {
                    if (response.success) {
                        // Atualizar a aparência da notificação excluída na tabela
                        $('tr[data-id="' + notificationId + '"]').remove();
                    } else {
                        console.error('Erro ao excluir notificação:', response.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Erro AJAX:', textStatus, errorThrown);
                }
            });
        }


        
        $('tr[data-id]').on('click', function () {
            var notificationRow = $(this);
            var notificationId = notificationRow.data('id');
            var notificationTitle = notificationRow.data('title');
            var notificationContent = notificationRow.data('content');
            showNotificationModal(notificationTitle, notificationContent, notificationId);

            // Fazer chamada AJAX para marcar a notificação como lida
            $.ajax({
                url: '/Notificacoes/Details/' + notificationId,
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        // Atualizar a aparência da notificação lida na tabela
                        notificationRow.css('font-weight', 'normal');
                        var lidaCell = notificationRow.find('td[data-lida]');
                        lidaCell.data('lida', true);
                        lidaCell.find('span').text('☑️');
                    } else {
                        console.error('Erro ao marcar notificação como lida:', response.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Erro AJAX:', textStatus, errorThrown);
                }
            });
        });

        function getUrlParameter(name) {
            const url = window.location.href;
            const urlSegments = url.split('/');
            return urlSegments[urlSegments.length - 1];
        }
        
        $(document).ready(function () {
            // Chamada da função que adiciona as classes de estilo ao modal
            applyModalStyles();
            
            // Verificar se o parâmetro "id" foi passado na URL
            var notificationId = getUrlParameter();
            console.log('notificationId:', notificationId); // Adicione essa linha
            if (notificationId) {
                // Encontrar a notificação correspondente na tabela
                var notificationRow = $('tr[data-id="' + notificationId + '"]');
                console.log('notificationRow:', notificationRow); // Adicione essa linha
                if (notificationRow.length > 0) {
                    // Extrair o título e o conteúdo da notificação
                    var notificationTitle = notificationRow.data('title');
                    var notificationContent = notificationRow.data('content');

                    // Exibir o modal correspondente
                    showNotificationModal(notificationTitle, notificationContent, notificationId);

                    // Marcar a notificação como lida
                    notificationRow.trigger('click');
                }
            }

                $('#notificationModal').on('click', '.close', function () {
                    $('#notificationModal').modal('hide');
            });

        });


    </script>
}